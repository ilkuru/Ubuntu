#! - shebang указывает какой интерпритатор будет запускать скрипт
#!/bin/bash - для bash

chown - смена владельца
chmod - смена прав доступа
SUID - бит запуска от имени вледельци

#!/bin/bash
echo "text" - выводит текст сообщение
read VALUE - считывает ввод
if [ $VALUE = "YES" ]; - если ввод = YES
then - то
echo "text" - выводит текст сообщение
else - если не YES
echo "text" - выводит текст сообщение
fi - завершение условного выражения if

#test
-x #проверить файл на исполняемый
-e файл существует;
-eq значения равны
-ne значения не равны
-z существует ли значение

# на выходе
0 - если результат положительный
не 0 - если отрицательный

test -x script # проверить является ли скрипт исполняемым.
echo $? # вывести результат проверки

test 5 -gt 2 # -gt это сравнение на >, 5 > 2
echo $? # вывести результат в данном случае сравнение

или

[5 -gt 2]
echo $? - вывести результат в данном случае сравнение

[ "text" = "test" ] # сравнивает два слова
echo $? # вывести результат в данном случае сравнение

|| - обозначает что условие до не выполнено
&& - обозначает что условие до выполнено
#если условие 100 > 50 try выполнит после && echo "YES" если условие fals выполнить || echo "No"
test 100 -gt 50 && echo "YES" || echo "No"
test 100 -gt 120 && echo "YES" || echo "No"

#задать в скрипте bash переменные
X = $(ls -a)
или
X='ls -a'

#!/bin/bash
x=$(date)
y='uptime -p'
echo "Today is $x and we are $y"

#for
#!/bin/bash
for x in 1 3 7 # x принемает значени 1,3,7 или последовательность for x in 'seq 3 8' - 3,4,5,...8
do # выполнить итерацию 1 потом 3, 7...
echo $x # вывести x = 1
done # завершить цикл

#!/bin/bash
files='ls ~' # переменная принемат значение от команды ls из домашней директории
for x in $files # x присваевает значение переменной files
do
echo $x
done

#while
#!/bin/bash
x=1 # начальное значение переменной
while [ $x -ne 5] # пока x != 5
do #  выполнять
echo $X # вывести x
x=$(($x+1)) # x + 1
done

#!/bin/bash
echo "message_text" # вывод текст. сообщения
x="Go" # задает переменную x
while [ $x != "STOP" ] # пока x != STOP
do # выполнять
read x # считать с консоли x
echo $x # вывести значение переменной
done # закончить







