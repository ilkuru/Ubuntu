/bin/sh - Bourne shell
/bin/bash - Bourne again shell
/bin/ksh - Korn shell
/bin/csh - С shell
/bin/tcsh - Toms's shell
/bin/zsh - ZSH

cat - вывод содержимого файла
cat > file # вывод в файл

cd - переход в каталог
ls - вывод инфо. о каталоге-файле
echo Hello; ls # вывести Hello, с новой строки ls
ls -a - показать со скрытыми файлами

echo - вывод текста в консоль
touch - создать пустой файла, обновление времени редактирования
file - справка по файлу
whatis - справка по названию
history - вывод истории команд
pwd - текущий каталог
export - экспорт переменной в среду окружения
unset - отключение переменной

при входе польхователя в систему
etc/profile - файл с глобальными настройками оболочки
  запускает, левая если юзер входит, если уже вошел и запускает bash, запуститься правая
        |                  |
/etc/profile.d          /etc/bash.bashrc
     |                  /etc/bashrc(глоб. настр. для всех usr)
~/.bash_profile
~/.bash_login
~/.profile ->  ~/.bashrc(наст. конкретного usr)

.profile - файл пользователя.
.bashrc - файл с настройками внешнего вида оснастки
при выходе пользователя из системы отрабатывает .bash_logout

env - вывод переменной среды

PWD=/home/ilya - директория п которую юзер входит после входа в систему
HOME=/home/ilya - домашняя дерикт.
SHELL=/bin/bash - Оболочка
LANG=en_US.UTF-8 - язык
PATH=/usr/local/sbin:/usr/local/bin: -  пути для исполняемых файлов

ABC = 123 - задаем переменную
export ABC - экспорт переменной в среду окружения
echo $ABC - вывод переменной из окружения
unset ABC - удалить переменную из окружения

PATH = $PATH:. - добавляет к переменной PATH текущий путь PATH через ':' c
помощью '.' добавляет путь текущей папки для запуска исполняемых сприптов с
директории в которой находится польз.

# Взаимодействие с групповыми файлами
touch 1.txt 2.txt 3.txt 4.txt 5.txt - создает 5 пустых txt файла
touch {6,7,8}.txt - создает 6,7,8 пустых txt файла

ls *.txt - показать все txt файлы в текущей директории
ls *.t* - показать все файлы .t в текущей директории
ls *.t?t - символ ? Заменяет только 1 символ
ls [1-3].txt - покажет с 1 по 3.txt файлы
* - Заменяет любое кол. символов
? - один символ
[1-3] - диапазон
{1,2,3,} - последовательность

umane -a # показать версию ядра и имя OS

file 1.txt # показать тип файла
whatis ssh # отображает что такое ssh
history - вывод истории команд
exec ls -a # выполнить команду игнорируя все настройки пользователя .bashrc и .profile

# работа с текстовыми потоками # вывод файлов
cut -c file_name # вывести содержимое файла с вырезанными данными
expand file_name # вывести содержимое файла с преобразованными tab-ми в пробелы
unexpand file_name # вывести содержимое файла с преобразованными пробелы в tab-ми
fmt file_name # вывести содержимое файла в одну строку
fmt -w 10 file_name # вывести содержимое файла в 10 символов на одной строке
head -n 10 file_name # вывести содержимое первых 10 cтрок файла
od file_name # конвертирование файла в 2,8,10,16-ричный новый формат
join file_name1 file_name2 # объединение(слияние) файлов по полю
less file_name # постраничное перелистывание файла с поиском
ln file_name # пронумеровать строки в файле
past file_name # Объединяет файлы построчно для сопоставления
pr file_name # показывает как выглядит текст при выводе на печать.
sed -e 's/stroka1(для-замены)/stroka2(на которую заменяют)' file_name # потоковый редактор
sort file_name # без ключа сортирует файл строки по алфавиту. -r в обратном порядке
split -l 2 file_name #разбивает файл на файлы по 2 строки. -b разбить файл на количество байт
tail file_name # показать последнии строки файла. -f показывает постувающие записа в конец файла
tr # трансформация
echo Hello | tr -t A-Z a-z # трансформировать вывод 'Hello' во все маленькие 'hello'
echo Hello | tr -t l L # трансформировать вывод 'Hello' в 'HeLLo'
echo Hello | tr -d l # трансформировать вывод 'Hello' в 'Heo'
echo Hello | tr -s l # трансформировать вывод 'Hello' в 'Helo' - объединит 'l'
uniq file_name # выводит только уникальные строки
uniq -с file_name # выводит уникальные строки с количе
uniq -d file_name # выводит только дублирующ. строки
wc file_name # считает количество byte, строк, -w слов, символов

# Операции с файломи и Папками в Linux'
touch # создает пустой фай, обновляет время достуап к файлу(касается)
mkdir # создает папку
ls dir_name # отобразить информацию о папке
cp # копирование файлов и папок -R со всем содержимым
mv # перемещение и ренайм папок и файлов
rm # удаляет папки и файлы -r со вложениями, -rf без подтверждения
rmdir #удаляет пустые папки
file # определяет тип файла

# символы
* - все что угодно, все символы
? - любой 1 символ
! - не
[ac] - а или с
[a-c] - a, b, c

#поиск find - в реальном времени
find . -name 'in*' # найти в текущей папке все что начинается на in
find . -name '[A-Z]*.*' # найти в текущей папке все что начинается с большой буквы
find . -size +5M # найти в текущей папке все что больше 5Mb
find / -user user_name # все к чему относиться user_name
find . -name 'file_name' -type f #
f – простые файлы;
d – каталоги;
l – символические ссылки;
b – блочные устройства (dev);
c – символьные устройства (dev);
p – именованные каналы;
s – сокеты;

find . -atime +5 # найти файлы к созданные не раньше 5 дней.
find . -сtime +5 # найти файлы к измененные не раньше 5 дней.

# поиск locate по индексированной базе которая формируеться 1 в 24
updatedb - запуск индексации файлов, обновления вручную
cat /etc/updateedb.conf # конфиг locate
locate user_name

# which
which ls # показать где расположен бинарник ls

#type
type ls # покажет с какими по умолчанию ключами запускается ls

#whereis
whereis ls # отображает более детальную информацию

#cpio архиватор
ls | cpio -o > ../test.cpio  # вывести содержимое каталога и архивировать это выше в файл test.cpio
find . -name '*.txt' | cpio -o > test.cpio # находит все файлы txt в тек. кат. и упаковывает в test.cpio
cpio -id< test.cpio # извлечь содержимое test.cpio

#dd резервная копия целиком блочного устройства.
dd if=/dev/sdb/  of=drive.img # if откуда of куда

#gzip архиватор
gzip file_name # сживает исходник
gunzip file_name.gz # разжимает исходник

#bzip2 архиватор
bzip2 file_name # сживает исходник
bzip2 file_name.bz2 # разжимает исходник

#tar архиватор
tar cvf archive.tar folder_name # cvf - create verbose folder имя_архива. folder_name то что архивир.
tar cvfz archive.tar.gz folder_name # сжать архив gzip-пом
tar xvf archive.tar #распаковать архив

# перенаправление выводов данных
stdin 0 - ввод
stdout 1 - вывод
stderr 2 - вывод ошибки

> - передать в
>> - дописать в
< - взять из
| - (конвеер) отправить следующей команде

Tee - отправить в файл и на страндартный вывод
Xargs - построчно передать на ввод команде

ls > list.txt # перезаписывает list.txt выводом ls
ls >> list.txt #Добавляет к list.txt выводом ls
ls bob 2> result.txt # вывод ошибки в файл result.txt
ls bob > result.txt 2> error.txt
ls | grep r # передать вывод в grep,grep ищет симв. 'r' и выводит
ls | tee result.txt # вывод на экран и в файл result.txt

find . -name '*.txt' | xargs rm -f # найти и удалить все файлы txt передавая через | построчно в xargs

